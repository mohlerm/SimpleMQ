<project name="SimpleMQ" default="build" basedir=".">

  <!-- set global properties for this build -->
  <property name="api.src.dir"    location="api/src"/>
  <property name="server.src.dir"    location="server/src"/>
  <property name="client.src.dir"    location="client/src"/>
  <property name="api.build.dir"  location="api/bin"/>
  <property name="server.build.dir"  location="server/bin"/>
  <property name="client.build.dir"  location="client/bin"/>
  <property name="jar.dir"  location="jar"/>
  <property name="lib.dir"    location="lib"/>
  <property name="client.main" value="ch.mohlerm.service.client.Main"/>
  <property name="server.main" value="ch.mohlerm.service.server.Main"/>
  <path id="classpath">
    <fileset dir="${lib.dir}" includes="**/*"/>
  </path>

  <target name="compileapi" description="compiles the api">
    <!-- Compile the java code from ${src} into ${build} -->
    <mkdir dir="${api.build.dir}"/>
    <mkdir dir="${client.build.dir}"/>
    <mkdir dir="${server.build.dir}"/>
    <javac srcdir="${api.src.dir}" destdir="${server.build.dir}" classpathref="classpath" includeantruntime="false" />
    <javac srcdir="${api.src.dir}" destdir="${client.build.dir}" classpathref="classpath" includeantruntime="false" />
  </target>

  <target name="compileclient" depends="compileapi" description="compiles the client source">
    <!-- Compile the java code from ${src} into ${build} -->
    <javac srcdir="${client.src.dir}" destdir="${client.build.dir}" classpathref="classpath" includeantruntime="false" />
    <copy todir="${client.build.dir}">
      <fileset dir="${client.src.dir}" excludes="**/*.java"/>
    </copy>
  </target>

  <target name="compileserver" depends="compileapi" description="compiles the server source">
    <!-- Compile the java code from ${src} into ${build} -->
    <javac srcdir="${server.src.dir}" destdir="${server.build.dir}" classpathref="classpath" includeantruntime="false" />
    <copy todir="${server.build.dir}">
      <fileset dir="${server.src.dir}" excludes="**/*.java"/>
    </copy>
  </target>

  <target name="jarclient" depends="compileclient" description="generate a jar client executable" >
    <!-- Put everything in into a executable jar file -->
    <jar jarfile="${jar.dir}/${ant.project.name}_client.jar" basedir="${client.build.dir}" >
      <zipgroupfileset dir="${lib.dir}" includes="*.jar" excludes=""/>
      <manifest>
        <attribute name="Main-Class" value="${client.main}"/>
      </manifest>
    </jar>
  </target>

  <target name="jarserver" depends="compileserver" description="generate a jar server executable" >
    <!-- Put everything in into a executable jar file -->
    <jar jarfile="${jar.dir}/${ant.project.name}_server.jar" basedir="${server.build.dir}" >
      <zipgroupfileset dir="${lib.dir}" includes="*.jar" excludes=""/>
      <manifest>
        <attribute name="Main-Class" value="${server.main}"/>
      </manifest>
    </jar>
  </target>

  <target name="build" depends="jarserver,jarclient" description="build everything" >

  </target>

  <target name="run" depends="build" description="execute the jar files" >
    <java classname="${server.main}" fork="true">
      <classpath>
        <path refid="classpath"/>
        <path location="${jar.dir}/${ant.project.name}_server.jar"/>
      </classpath>
     <!-- <arg value="${user}"/>
      <arg value="${password}"/> -->
    </java>
  </target>

  <target name="clean" description="clean up" >
    <!-- Delete the ${build} directory and the jar file -->
    <delete dir="${api.build.dir}"/>
    <delete dir="${client.build.dir}"/>
    <delete dir="${server.build.dir}"/>
    <delete file="${jar.dir}/${ant.project.name}_client.jar"/>
    <delete file="${jar.dir}/${ant.project.name}_server.jar"/>
  </target>

</project>